import java.util.*;
import java.io.*;

/* COSC1P03
 * ASSIGNMENT #1
 * Name: (Samuel Onabolu)
 * Student #: (6783369)
 *
 * (Fill in program explanation here).
 */
public class LifeGame {
 //Start array info
  int [][] arr;
  int [][] newArr;
  int [][] original;
   
int p = 1;
  int s;
 int check = 0;
 int row;
 int col;
 //End array info
 
 public LifeGame() {
   
 
   
   String read = " ";
   loadState(read);
   printArray(arr);
   Scanner console= new Scanner(System.in);
System.out.print("How many iterations?"); 
int num =console.nextInt();
//Stri num =console.nextInt();
 System.out.print("# of Iterations is " + num); 
 if (num==0){
 countNeighbours();
    Update(arr,newArr); 
   countNeighbours();
    Update(arr,newArr); 
   countNeighbours();
     Update(arr,newArr); 
   countNeighbours();
    Update(arr,newArr); 
   printArray(newArr);
 
 }
 

while(num!=0){

 if (num ==1) {
    countNeighbours();
    printArray(newArr);
      
      System.out.print("How many iterations?"); 
  num =console.nextInt();
 System.out.print("# of Iterations is " + num);
    
 }
  else if (num ==2) {
    countNeighbours();
     Update(arr,newArr);
     countNeighbours();
   
      printArray(newArr);
       Update(arr,original);
       
      //newArr=original;
    
        
     
  
         
     
       
    // loadState(read);
        System.out.print("How many iterations?"); 
  num =console.nextInt();
 System.out.print("# of Iterations is " + num);
 
  
   
 }
  
  
    else if (num ==3) {
    countNeighbours();
       Update(arr,newArr); 
  
       
     countNeighbours();
        Update(arr,newArr); 
          countNeighbours();
          Update(arr,newArr);
           printArray(newArr);
        Update(arr,original); 
 
        System.out.print("How many iterations?"); 
  num =console.nextInt();
 System.out.print("# of Iterations is " + num);
    
 }
    
  else if(num>3){
   
   countNeighbours();
    Update(arr,newArr); 
   countNeighbours();
    Update(arr,newArr); 
   countNeighbours();
     Update(arr,newArr); 
   countNeighbours();
    Update(arr,newArr); 
   printArray(newArr);
 
     System.out.print("How many iterations?"); 
  num =console.nextInt();
 System.out.print("# of Iterations is " + num);
  }
  
}
   console.close();
   
   
   
   

  

 
   
 }
 
 private void loadState(String filename) {
   
   
  Scanner file;
  try {
    System.out.print("Enter game filename: ");
    Scanner scan =new Scanner(System.in);
    scan.nextLine();
   File text = new File(scan.nextLine());
                          

            scan = new Scanner(text);
 
   


   
    
      row = scan.nextInt();
     col = scan.nextInt();
    arr= new int [row][col];
    newArr= new int [row][col];
    original= new int [row][col];
    
      for( int i = 0; i <arr.length; i++){
      for ( int j = 0; j<arr[i].length; j++){
        
        arr[i][j]=scan.nextInt();
        
    newArr[i][j]=arr[i][j];
     original[i][j]=arr[i][j];
    }
    
        
    }
      
       
      System.out.println();
      //printArray(arr);
      System.out.println();
       
        
       
    
  }
    
  catch (Exception exn) {
   
  }
  //file.close(); //Don't forget to always close your streams!
 }
 

  private void printArray(int [][] array) {
    for( int i = 0; i <array.length; i++){
      for ( int j = 0; j<array[i].length; j++){
    System.out.print(array[i][j]);
    }
   System.out.print("\n");
 }
  }
  
  private void countNeighbours () {
      
   for(   int i = 0; i <arr.length; i++){
      for ( int j = 0; j <arr[i].length; j++){
      int count = 0;
      int count3 = 0;
      int count4=0;
      
     
     
  // int newI=(i+row)%row; 
  //int newJ=(j+col)%col;

//3 rows 
   
// 4 cols
        
        
 
      
                           /*CHECKS ALL DIRECTIONS*/
        
 /*TOP*/    
   
      /*  A dead cell (off/0) will activate if it has precisely three live neighbours. */  
      if (arr[(i-1+row)%row][(j+col)%col]==1){
    
  count++;
 }
 
/* A live cell with four or more live neighbours will die of irritation */ 
   if(arr[i][j]==1&&arr[(i-1+row)%row][(j+col)%col]==1){
    // System.out.println("top check = " + ++check);
  count4++;
   
   
  }
   

    
        
 
 

        
  
 
 
  /*TOP RIGHT*/ 
  
  /*  A dead cell (off/0) will activate if it has precisely three live neighbours. */  
  if (arr[(i-1+row)%row][(j+1+col)%col]==1){
  count++;
  
} 
  /* A live cell with four or more live neighbours will die of irritation */  
  if(arr[i][j]==1&&arr[(i-1+row)%row][(j+col)%col]==1){
    //System.out.println("top right check = " + ++check);
  count4++;
 
  }
  
 
 
    
         
 
   /*RIGHT*/   
   
   /*  A dead cell (off/0) will activate if it has precisely three live neighbours. */  
   if (arr[(i+row)%row][(j+1+col)%col]==1){
     count++;
   }
   
   /* A live cell with four or more live neighbours will die of irritation */ 
    if(arr[i][j]==1&&arr[(i+row)%row][(j+1+col)%col]==1){
      // System.out.println("right  = " + ++check);
  count4++;
   
  }
    

   
    
 
   /*BOTTOM RIGHT*/ 
    
    /*  A dead cell (off/0) will activate if it has precisely three live neighbours. */  
    if (arr[(i+1+row)%row][(j+1+col)%col]==1){
     count++;
   }
   
   /* A live cell with four or more live neighbours will die of irritation */ 
    if(arr[i][j]==1&&arr[(i-1+row)%row][(j+1+col)%col]==1){
      //System.out.println(" bottom right  = " + ++check);
  count4++;
   
  }
    
 
   
   
  
   /*BOTTOM*/  
    
    /*  A dead cell (off/0) will activate if it has precisely three live neighbours. */  
    if (arr[(i+1+row)%row][(j+col)%col]==1){
      
     count++;
   }
   
   /* A live cell with four or more live neighbours will die of irritation */ 
     if(arr[i][j]==1&&arr[(i+1+row)%row][(j+col)%col]==1){
       //System.out.println("bottom  = " + ++check);
  count4++;
    
  }
     
  
   
     /*BOTTOM LEFT*/   
    
    /*  A dead cell (off/0) will activate if it has precisely three live neighbours. */  
    if (arr[(i+1+row)%row][(j-1+col)%col]==1){
     count++;
   }
     
     /* A live cell with four or more live neighbours will die of irritation */ 
    if(arr[i][j]==1&&arr[(i+1+row)%row][(j-1+col)%col]==1){
     // System.out.println("bottom left  = " + ++check);
  count4++;
   
  }
    
 
       /* LEFT*/   
      
      /*  A dead cell (off/0) will activate if it has precisely three live neighbours. */  
      if (arr[(i+row)%row][(j-1+col)%col]==1){
     count++;
       
   }
       /* A live cell with four or more live neighbours will die of irritation */ 
     if(arr[i][j]==1&&arr[(i+row)%row][(j-1+col)%col]==1){
       // System.out.println("left  = " + ++check);
  count4++;
     
  }
     
   
        
       
     /*TOP LEFT*/    
        
        /*  A dead cell (off/0) will activate if it has precisely three live neighbours. */  
        if (arr[(i-1+row)%row][(j-1+col)%col]==1){
           //System.out.println("top left = " + ++check);
     count++;
   }
         
         /* A live cell with four or more live neighbours will die of irritation */ 
         if(arr[i][j]==1&&arr[(i-1+row)%row][(j-1+col)%col]==1){
  count4++;
 
    
  }
   
       
       
       
         if (count==3){
            
        newArr[i][j]=1;
        
         count = 0;  
       
         }
       
         
          else if (count4>=4){
         
        newArr[i][j]=0;
       // System.out.println("i = "+ i+ " j = " + j   );
        
         count4 = 0;  
       
         }
          
          else if (count4==1||count4==0){
         
        newArr[i][j]=0;
       
        
         count4 = 0;  
       
         }
           else if (count4==2||count4==3){
         System.out.print("works");
        newArr[i][j]=1;
       
        
         count4 = 0;  
       
         }
          
 
  }
      
  
   }
  
    
  
   System.out.println();
  
  }
  private void Update(int [][] a, int [][] b) {
     
  for(  int i = 0; i <b.length; i++){
      for (int  j = 0; j<b[i].length; j++){
   
         
     a[i][j]=b[i][j];
  }
  
  }
   
  
  }
  
  
  
  // new index=(index + length of array)%length of array
  
    private void iterate () {
      int newJ = 0;
  for(  int i = 0; i <arr.length; i++){
      for (int  j = 0; j<arr[i].length; j++){
   
     
   // newJ=arr[(i+row)%row][(j+col)%col];
     System.out.print(newJ);
  }
  System.out.print("\n");
  }
    }
 public static void main(String args[]) {new LifeGame();}
}
